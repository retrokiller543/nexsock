{
  "version": 3,
  "sources": ["../../src-ts/core/jsx-utils.ts", "../../src-ts/generated/components/NsCard.css.ts", "../../src-ts/components/NsCard.tsx", "../../src-ts/generated/components/NsBadge.css.ts", "../../src-ts/components/NsBadge.tsx", "../../src-ts/generated/components/NsButton.css.ts", "../../src-ts/components/NsButton.tsx", "../../src-ts/core/web-components.ts", "../../src-ts/generated/component-registry.ts", "../../src-ts/ui/messages.ts", "../../src-ts/ui/modals.ts", "../../src-ts/ui/dropdowns.ts", "../../src-ts/types/storage.ts", "../../src-ts/services/git-service.ts", "../../src-ts/services/theme-service.ts", "../../src-ts/ui/error-display.ts", "../../src-ts/core/init.ts", "../../src-ts/services/config-service.ts", "../../src-ts/services/env-vars-service.ts", "../../src-ts/services/service-management.ts", "../../src-ts/core/debug.ts", "../../src-ts/core/api.ts", "../../src-ts/main.ts"],
  "sourcesContent": [
    "// Simple JSX factory functions for standalone JSX without React with CSS scoping support\n\n// Forward declarations for JSX\ntype CreateElementType = (\n  tag: string | Function,\n  props: Record<string, any> | null,\n  ...children: any[]\n) => HTMLElement | DocumentFragment;\n\ntype FragmentType = ({ children }: { children: any[] }) => DocumentFragment;\n\n// Make createElement and Fragment global for JSX\ndeclare global {\n  var createElement: CreateElementType;\n  var Fragment: FragmentType;\n}\n\n// Context to track the current scope for transparent scoping\nlet currentScopeId: string | null = null;\n\n/**\n * Generates a unique CSS class name for component scoping\n * @param componentName The name of the component\n * @returns A unique CSS class name\n */\nfunction generateScopedClassName(componentName: string): string {\n  return `nx-${componentName}-${Math.random().toString(36).substring(2, 8)}`;\n}\n\n/**\n * Injects scoped CSS into the document using data attributes\n * @param css The CSS to inject\n * @param scopeId The unique scope identifier\n */\nexport function injectScopedCSS(css: string, scopeId: string): void {\n  if (!css || !scopeId) return;\n  \n  // Replace selectors to use data attributes instead of classes\n  const scopedCSS = css\n    .replace(/([^{}]+){/g, (match, selector) => {\n      const trimmedSelector = selector.trim();\n      \n      // Skip @rules and already scoped selectors\n      if (trimmedSelector.startsWith('@') || trimmedSelector.includes(`[data-scope=\"${scopeId}\"]`)) {\n        return match;\n      }\n      \n      // Split multiple selectors and scope each one\n      const selectors = trimmedSelector.split(',').map((s: string) => {\n        const cleaned = s.trim();\n        // Add data attribute selector to scope the CSS\n        return `[data-scope=\"${scopeId}\"] ${cleaned}`;\n      }).join(', ');\n      \n      return `${selectors} {`;\n    });\n  \n  // Create and append style element\n  const style = document.createElement('style');\n  style.textContent = scopedCSS;\n  style.setAttribute('data-scope-id', scopeId);\n  document.head.appendChild(style);\n}\n\n/**\n * Creates a DOM element from JSX with automatic CSS scoping\n */\nexport function createElement(\n  tag: string | Function,\n  props: Record<string, any> | null,\n  ...children: any[]\n): HTMLElement | DocumentFragment {\n  // Handle functional components\n  if (typeof tag === 'function') {\n    // Check if component is a component object with CSS\n    if (tag && typeof tag === 'object' && 'component' in tag && 'css' in tag) {\n      const componentObj = tag as any;\n      const componentName = componentObj.component.name || 'Component';\n      const scopeId = generateScopedClassName(componentName);\n      \n      // Inject the scoped CSS\n      injectScopedCSS(componentObj.css, scopeId);\n      \n      // Set the current scope context\n      const previousScopeId = currentScopeId;\n      currentScopeId = scopeId;\n      \n      // Call the component function\n      const result = componentObj.component({ ...props, children });\n      \n      // Restore previous scope context\n      currentScopeId = previousScopeId;\n      \n      return result;\n    }\n    \n    // Check if function has a css property attached\n    if ((tag as any).css) {\n      const componentName = tag.name || 'Component';\n      const scopeId = generateScopedClassName(componentName);\n      \n      // Inject the scoped CSS\n      injectScopedCSS((tag as any).css, scopeId);\n      \n      // Set the current scope context\n      const previousScopeId = currentScopeId;\n      currentScopeId = scopeId;\n      \n      // Call the component function\n      const result = tag({ ...props, children });\n      \n      // Restore previous scope context\n      currentScopeId = previousScopeId;\n      \n      return result;\n    }\n    \n    return tag({ ...props, children });\n  }\n\n  // Create the DOM element\n  const element = document.createElement(tag);\n  \n  // Automatically apply current scope if one exists\n  if (currentScopeId) {\n    element.setAttribute('data-scope', currentScopeId);\n  }\n  \n  if (props) {\n    Object.entries(props).forEach(([key, value]) => {\n      // Handle special props\n      if (key === 'className') {\n        element.className = value;\n      } else if (key === 'css') {\n        // Handle inline CSS with automatic scoping\n        const scopeId = generateScopedClassName('inline');\n        injectScopedCSS(value, scopeId);\n        element.setAttribute('data-scope', scopeId);\n      } else if (key.startsWith('on') && typeof value === 'function') {\n        const event = key.toLowerCase().slice(2);\n        element.addEventListener(event, value);\n      } else {\n        element.setAttribute(key, value);\n      }\n    });\n  }\n\n  // Append children\n  children.flat().forEach(child => {\n    if (typeof child === 'string' || typeof child === 'number') {\n      element.appendChild(document.createTextNode(String(child)));\n    } else if (child instanceof Node) {\n      element.appendChild(child);\n    }\n  });\n\n  return element;\n}\n\n/**\n * Creates a document fragment for JSX fragments\n */\nexport function Fragment({ children }: { children: any[] }): DocumentFragment {\n  const fragment = document.createDocumentFragment();\n  children.flat().forEach(child => {\n    if (typeof child === 'string' || typeof child === 'number') {\n      fragment.appendChild(document.createTextNode(String(child)));\n    } else if (child instanceof Node) {\n      fragment.appendChild(child);\n    }\n  });\n  return fragment;\n}\n\n// Make createElement and Fragment available globally for JSX\n(globalThis as any).createElement = createElement;\n(globalThis as any).Fragment = Fragment;",
    "// Auto-generated CSS module for src-ts/components/NsCard.css\nexport const css = `.ns-card {\n  background: var(--color-surface, #ffffff);\n  border: 1px solid var(--color-border, #e1e5e9);\n  border-radius: var(--border-radius-lg, 8px);\n  box-shadow: var(--shadow-sm, 0 1px 3px rgba(0, 0, 0, 0.1));\n  overflow: hidden;\n  transition: box-shadow var(--transition-fast, 0.15s) ease;\n}\n\n.ns-card:hover {\n  box-shadow: var(--shadow-md, 0 4px 6px rgba(0, 0, 0, 0.1));\n}\n\n.ns-card-header {\n  padding: var(--spacing-lg, 16px) var(--spacing-xl, 20px);\n  border-bottom: 1px solid var(--color-border, #e1e5e9);\n  background: var(--color-surface-elevated, #f8f9fa);\n}\n\n.ns-card-title {\n  margin: 0;\n  font-size: var(--font-size-xl, 18px);\n  font-weight: 600;\n  color: var(--text-primary, #2d3748);\n}\n\n.ns-card-subtitle {\n  margin: 4px 0 0 0;\n  font-size: var(--font-size-base, 14px);\n  color: var(--text-secondary, #718096);\n}\n\n.ns-card-body {\n  padding: var(--spacing-xl, 20px);\n}\n\n.ns-card-footer {\n  padding: var(--spacing-md, 12px) var(--spacing-xl, 20px);\n  border-top: 1px solid var(--color-border, #e1e5e9);\n  background: var(--color-surface-elevated, #f8f9fa);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: var(--spacing-md, 12px);\n}\n\n/* Variants */\n.ns-card.elevated {\n  box-shadow: var(--shadow-lg, 0 10px 15px rgba(0, 0, 0, 0.1));\n}\n\n.ns-card.flat {\n  box-shadow: none;\n  border: 1px solid var(--color-border, #e1e5e9);\n}\n\n.ns-card.borderless {\n  border: none;\n  box-shadow: none;\n}`;\nexport default css;\n",
    "import {css} from '../generated/components/NsCard.css';\n\ninterface NsCardProps {\n  children?: any;\n  title?: string;\n  subtitle?: string;\n  footer?: any;\n  variant?: 'default' | 'elevated' | 'flat' | 'borderless';\n  className?: string;\n}\n\n/**\n * Nexsock UI Card Component\n * \n * Usage in templates:\n * <ns-card title=\"Service Status\" subtitle=\"Current status of your services\">\n *   <p>Card content goes here</p>\n * </ns-card>\n */\nfunction NsCardComponent(props: NsCardProps): JSX.Element {\n  const {\n    children,\n    title,\n    subtitle,\n    footer,\n    variant = 'default',\n    className = ''\n  } = props;\n\n  const classes = [\n    'ns-card',\n    variant !== 'default' && variant,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={classes}>\n      {(title || subtitle) && (\n        <div className=\"ns-card-header\">\n          {title && <h3 className=\"ns-card-title\">{title}</h3>}\n          {subtitle && <p className=\"ns-card-subtitle\">{subtitle}</p>}\n        </div>\n      )}\n      \n      {children && (\n        <div className=\"ns-card-body\">\n          {children}\n        </div>\n      )}\n      \n      {footer && (\n        <div className=\"ns-card-footer\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Attach CSS\nNsCardComponent.css = css;\n\nexport const NsCard = NsCardComponent;",
    "// Auto-generated CSS module for src-ts/components/NsBadge.css\nexport const css = `.ns-badge {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.4;\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  border: 1px solid transparent;\n}\n\n/* Variants */\n.ns-badge.success {\n  background-color: var(--success-bg, #d1fae5);\n  color: var(--success-color, #065f46);\n  border-color: var(--success-border, #a7f3d0);\n}\n\n.ns-badge.warning {\n  background-color: var(--warning-bg, #fef3c7);\n  color: var(--warning-color, #92400e);\n  border-color: var(--warning-border, #fde68a);\n}\n\n.ns-badge.error {\n  background-color: var(--error-bg, #fee2e2);\n  color: var(--error-color, #991b1b);\n  border-color: var(--error-border, #fecaca);\n}\n\n.ns-badge.info {\n  background-color: var(--info-bg, #dbeafe);\n  color: var(--info-color, #1e40af);\n  border-color: var(--info-border, #bfdbfe);\n}\n\n.ns-badge.neutral {\n  background-color: var(--neutral-bg, #f3f4f6);\n  color: var(--neutral-color, #374151);\n  border-color: var(--neutral-border, #d1d5db);\n}\n\n/* Sizes */\n.ns-badge.small {\n  padding: 1px 6px;\n  font-size: 10px;\n}\n\n.ns-badge.large {\n  padding: 4px 12px;\n  font-size: 14px;\n  border-radius: 16px;\n}\n\n/* Styles */\n.ns-badge.outline {\n  background-color: transparent;\n}\n\n.ns-badge.solid {\n  border-color: transparent;\n}\n\n.ns-badge.solid.success {\n  background-color: var(--success-solid-bg, #059669);\n  color: white;\n}\n\n.ns-badge.solid.warning {\n  background-color: var(--warning-solid-bg, #d97706);\n  color: white;\n}\n\n.ns-badge.solid.error {\n  background-color: var(--error-solid-bg, #dc2626);\n  color: white;\n}\n\n.ns-badge.solid.info {\n  background-color: var(--info-solid-bg, #2563eb);\n  color: white;\n}\n\n.ns-badge.solid.neutral {\n  background-color: var(--neutral-solid-bg, #6b7280);\n  color: white;\n}`;\nexport default css;\n",
    "import {css} from '../generated/components/NsBadge.css';\n\ninterface NsBadgeProps {\n  children?: any;\n  variant?: 'success' | 'warning' | 'error' | 'info' | 'neutral';\n  size?: 'small' | 'medium' | 'large';\n  style?: 'default' | 'outline' | 'solid';\n  className?: string;\n}\n\n/**\n * Nexsock UI Badge Component\n * \n * Usage in templates:\n * <ns-badge variant=\"success\">Running</ns-badge>\n * <ns-badge variant=\"error\" style=\"solid\">Failed</ns-badge>\n */\nfunction NsBadgeComponent(props: NsBadgeProps): JSX.Element {\n  const {\n    children,\n    variant = 'neutral',\n    size = 'medium',\n    style = 'default',\n    className = ''\n  } = props;\n\n  const classes = [\n    'ns-badge',\n    variant,\n    size !== 'medium' && size,\n    style !== 'default' && style,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <span className={classes}>\n      {children}\n    </span>\n  );\n}\n\n// Attach CSS\nNsBadgeComponent.css = css;\n\nexport const NsBadge = NsBadgeComponent;",
    "// Auto-generated CSS module for src-ts/components/NsButton.css\nexport const css = `.ns-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--spacing-sm, 8px) var(--spacing-lg, 16px);\n  border: 1px solid transparent;\n  border-radius: var(--border-radius-md, 6px);\n  cursor: pointer;\n  font-weight: 500;\n  font-size: var(--font-size-base, 14px);\n  line-height: 1.4;\n  text-decoration: none;\n  transition: all var(--transition-fast, 0.15s) ease;\n  user-select: none;\n  min-height: 36px;\n  gap: 6px;\n  font-family: var(--font-family, inherit);\n}\n\n.ns-button:focus {\n  outline: 2px solid var(--primary, #0070f3);\n  outline-offset: 2px;\n}\n\n.ns-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  pointer-events: none;\n}\n\n/* Variants */\n.ns-button.primary {\n  background-color: var(--primary, #0070f3);\n  color: var(--text-inverse, white);\n  border-color: var(--primary, #0070f3);\n}\n\n.ns-button.primary:hover:not(:disabled) {\n  background-color: var(--primary-hover, #0061d5);\n  border-color: var(--primary-hover, #0061d5);\n  transform: translateY(-1px);\n}\n\n.ns-button.secondary {\n  background-color: var(--color-surface-elevated, #f8f9fa);\n  color: var(--text-secondary, #666);\n  border-color: var(--color-border, #e1e5e9);\n}\n\n.ns-button.secondary:hover:not(:disabled) {\n  background-color: var(--color-surface-hover, #f5f5f5);\n  color: var(--text-primary, #2d3748);\n  border-color: var(--color-border, #e1e5e9);\n}\n\n.ns-button.danger {\n  background-color: var(--danger, #dc3545);\n  color: var(--text-inverse, white);\n  border-color: var(--danger, #dc3545);\n}\n\n.ns-button.danger:hover:not(:disabled) {\n  background-color: var(--danger-hover, #c82333);\n  border-color: var(--danger-hover, #c82333);\n  transform: translateY(-1px);\n}\n\n.ns-button.ghost {\n  background-color: transparent;\n  color: var(--text-secondary, #666);\n  border: 1px solid transparent;\n}\n\n.ns-button.ghost:hover:not(:disabled) {\n  background-color: var(--color-surface-elevated, #f8f9fa);\n  color: var(--text-primary, #2d3748);\n}\n\n/* Sizes */\n.ns-button.small {\n  padding: 4px 12px;\n  font-size: 12px;\n  min-height: 28px;\n}\n\n.ns-button.large {\n  padding: 12px 24px;\n  font-size: 16px;\n  min-height: 44px;\n}\n\n/* Loading state */\n.ns-button.loading {\n  position: relative;\n  color: transparent;\n}\n\n.ns-button.loading::after {\n  content: '';\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border: 2px solid currentColor;\n  border-radius: 50%;\n  border-top-color: transparent;\n  animation: spin 0.8s linear infinite;\n  color: inherit;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}`;\nexport default css;\n",
    "import {css} from '../generated/components/NsButton.css';\n\ninterface NsButtonProps {\n  children?: any;\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  onClick?: () => void;\n  href?: string;\n  target?: string;\n  className?: string;\n}\n\n/**\n * Nexsock UI Button Component\n * \n * Usage in templates:\n * <ns-button variant=\"primary\" size=\"large\">Click me</ns-button>\n * <ns-button variant=\"danger\" onclick=\"alert('Danger!')\">Delete</ns-button>\n */\nfunction NsButtonComponent(props: NsButtonProps): JSX.Element {\n  const {\n    children,\n    variant = 'primary',\n    size = 'medium',\n    disabled = false,\n    loading = false,\n    type = 'button',\n    onClick,\n    href,\n    target,\n    className = ''\n  } = props;\n\n  const classes = [\n    'ns-button',\n    variant,\n    size,\n    loading && 'loading',\n    className\n  ].filter(Boolean).join(' ');\n\n  // If href is provided, render as link\n  if (href) {\n    return (\n      <a\n        href={href}\n        target={target}\n        className={classes}\n        onClick={onClick}\n        aria-disabled={disabled}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  // Otherwise render as button\n  return (\n    <button\n      type={type}\n      className={classes}\n      {...disabled ? { disabled: true } : {}}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n\n// Attach CSS\nNsButtonComponent.css = css;\n\nexport const NsButton = NsButtonComponent;",
    "/**\n * Web Components bridge for JSX components\n * Allows JSX components to be used directly in HTML templates as custom elements\n */\n\ninterface ComponentDefinition {\n  component: Function;\n  css?: string;\n  observedAttributes?: string[];\n}\n\n/**\n * Converts JSX component to Web Component\n */\nexport function createWebComponent(\n  tagName: string,\n  definition: ComponentDefinition\n): void {\n  // Inject CSS if provided\n  if (definition.css && !document.querySelector(`style[data-component=\"${tagName}\"]`)) {\n    const style = document.createElement('style');\n    style.textContent = definition.css;\n    style.setAttribute('data-component', tagName);\n    document.head.appendChild(style);\n  }\n\n  class JSXWebComponent extends HTMLElement {\n    private mounted = false;\n    \n    static get observedAttributes() {\n      return definition.observedAttributes || [];\n    }\n    \n    connectedCallback() {\n      this.render();\n      this.mounted = true;\n    }\n    \n    attributeChangedCallback() {\n      if (this.mounted) {\n        this.render();\n      }\n    }\n    \n    private render() {\n      // Convert attributes to props\n      const props: Record<string, any> = {};\n      \n      // Get all attributes\n      for (let i = 0; i < this.attributes.length; i++) {\n        const attr = this.attributes[i];\n        if (!attr) continue;\n        let value: any = attr.value;\n        \n        // Try to parse JSON for complex props\n        if (value.startsWith('{') || value.startsWith('[') || value === 'true' || value === 'false') {\n          try {\n            value = JSON.parse(value);\n          } catch {\n            // Keep as string if not valid JSON\n          }\n        }\n        \n        props[this.camelCase(attr.name)] = value;\n      }\n      \n      // Add event listeners from attributes\n      for (const key in props) {\n        if (key.startsWith('on') && typeof props[key] === 'string') {\n          // Convert string to function (for simple cases)\n          const eventName = key.slice(2).toLowerCase();\n          const funcBody = props[key];\n          \n          // Simple event handler support\n          if (funcBody.includes('alert') || funcBody.includes('console')) {\n            props[key] = new Function('event', funcBody);\n          }\n        }\n      }\n      \n      // Capture current innerHTML as children before clearing\n      const childrenHTML = this.innerHTML;\n      const childrenElements: Node[] = [];\n      \n      // Convert innerHTML to actual DOM nodes if there's content\n      if (childrenHTML.trim()) {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = childrenHTML;\n        childrenElements.push(...Array.from(tempDiv.childNodes));\n      }\n      \n      // Pass children as props if any exist\n      if (childrenElements.length > 0) {\n        props.children = childrenElements;\n      }\n      \n      // Clear previous content\n      this.innerHTML = '';\n      \n      // Create and append the JSX component\n      const element = definition.component(props);\n      if (element instanceof Node) {\n        this.appendChild(element);\n      }\n    }\n    \n    private camelCase(str: string): string {\n      return str.replace(/-([a-z])/g, (match, letter) => letter.toUpperCase());\n    }\n  }\n  \n  customElements.define(tagName, JSXWebComponent);\n}\n\n/**\n * Helper to register a JSX component as a web component\n */\nexport function registerComponent(tagName: string, component: Function & { css?: string }): void {\n  createWebComponent(tagName, {\n    component,\n    css: component.css,\n    observedAttributes: ['*'] // Listen to all attribute changes\n  });\n}",
    "// Auto-generated component registry - do not edit manually\n// This file is regenerated on every build\n\nimport { NsCard } from '../components/NsCard';\nimport { NsBadge } from '../components/NsBadge';\nimport { NsButton } from '../components/NsButton';\n\nimport { registerComponent } from '../core/web-components';\n\nexport const COMPONENT_REGISTRY = {\n  'ns-card': NsCard,\n  'ns-badge': NsBadge,\n  'ns-button': NsButton,\n} as const;\n\nexport type ComponentTagName = keyof typeof COMPONENT_REGISTRY;\n\nexport function registerAllComponents(): void {\n  Object.entries(COMPONENT_REGISTRY).forEach(([tagName, component]) => {\n    registerComponent(tagName, component);\n  });\n  console.log('Auto-registered components:', Object.keys(COMPONENT_REGISTRY));\n}\n",
    "/**\n * Message handling utilities for Nexsock UI\n */\n\nimport {MessageType} from '../types/ui';\n\n/**\n * Shows a temporary message to the user\n */\nexport function showMessage(message: string, type: MessageType = 'info'): void {\n  // Create message element\n  const messageEl = document.createElement('div');\n  messageEl.className = `message message-${type}`;\n  messageEl.textContent = message;\n\n  // Add to messages container or create one\n  let container = document.getElementById('messages-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'messages-container';\n    container.className = 'messages';\n    document.body.appendChild(container);\n  }\n\n  container.appendChild(messageEl);\n\n  // Auto-remove after 5 seconds\n  setTimeout(() => {\n    if (messageEl.parentNode) {\n      messageEl.parentNode.removeChild(messageEl);\n    }\n  }, 5000);\n}\n",
    "/**\n * Modal handling utilities for Nexsock UI\n */\n\n/**\n * Closes any open modal\n */\nexport function closeModal(): void {\n  const modal = document.querySelector<HTMLElement>('.modal-overlay');\n  if (modal) {\n    modal.remove();\n  }\n}",
    "/**\n * Dropdown handling utilities for Nexsock UI\n */\n\n/**\n * Toggles dropdown menu visibility\n */\nexport function toggleDropdown(dropdownId: string): void {\n  const dropdown = document.getElementById(dropdownId);\n  if (!dropdown) return;\n\n  // Close all other dropdowns first\n  document.querySelectorAll('.dropdown.active').forEach(dd => {\n    if (dd.id !== dropdownId) {\n      dd.classList.remove('active');\n    }\n  });\n\n  // Toggle this dropdown\n  dropdown.classList.toggle('active');\n}\n\n/**\n * Closes all open dropdowns\n */\nexport function closeAllDropdowns(): void {\n  document.querySelectorAll('.dropdown.active').forEach(dropdown => {\n    dropdown.classList.remove('active');\n  });\n}",
    "/**\n * Storage-related type definitions for Nexsock Web Interface\n */\n\n// Storage keys for localStorage\nexport const STORAGE_KEYS = {\n  SERVICE_CONFIG: (serviceName: string) => `nexsock_service_config_${serviceName}`,\n  GIT_CONTENT_COLLAPSED: (contentId: string) => `git_${contentId}_collapsed`,\n} as const;",
    "/**\n * Git operations service for Nexsock\n * Handles git-related operations for services\n */\n\nimport {STORAGE_KEYS} from '../types/storage';\nimport {showMessage} from '../ui/messages';\n\n/**\n * Shows a specific git tab (commits or branches)\n */\nexport function showGitTab(tabName: 'commits' | 'branches', serviceName: string): void {\n  // Update tab button states\n  document.querySelectorAll('.tab-button').forEach(btn => {\n    btn.classList.remove('active');\n  });\n\n  // Find and activate the clicked tab button\n  const clickedTab = (event as any)?.target as HTMLElement;\n  if (clickedTab) {\n    clickedTab.classList.add('active');\n  }\n\n  // Load the appropriate content\n  const tabContent = document.getElementById('git-tab-content');\n  if (!tabContent) return;\n\n  if (tabName === 'commits') {\n    tabContent.innerHTML = '<div class=\"loading\">Loading commits...</div>';\n    window.htmx.ajax('GET', `/api/templates/git-log?service=${serviceName}`, {\n      target: '#git-tab-content',\n      swap: 'innerHTML'\n    });\n  } else if (tabName === 'branches') {\n    tabContent.innerHTML = '<div class=\"loading\">Loading branches...</div>';\n    window.htmx.ajax('GET', `/api/templates/git-branches?service=${serviceName}`, {\n      target: '#git-tab-content',\n      swap: 'innerHTML'\n    });\n  }\n}\n\n/**\n * Creates a new git branch\n */\nexport function createNewBranch(serviceName: string): void {\n  const input = document.getElementById('new-branch-name') as HTMLInputElement;\n  if (!input) return;\n\n  const branchName = input.value.trim();\n  if (!branchName) {\n    showMessage('Please enter a branch name', 'warning');\n    return;\n  }\n\n  if (!confirm(`Create new branch \"${branchName}\" and switch to it?`)) {\n    return;\n  }\n\n  // Use fetch to create the branch\n  const formData = new FormData();\n  formData.append('branch', branchName);\n  formData.append('create', 'true');\n\n  fetch(`/api/services/${serviceName}/git/checkout/branch`, {\n    method: 'POST',\n    body: formData\n  })\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error: ${response.status}`);\n    }\n    return response.json();\n  })\n  .then(data => {\n    // Clear the input\n    input.value = '';\n\n    // Refresh the git section\n    window.htmx.ajax('GET', `/api/templates/git-section?service=${serviceName}`, {\n      target: '#git-section',\n      swap: 'outerHTML'\n    });\n\n    showMessage(`Successfully created and switched to branch \"${branchName}\"`, 'success');\n  })\n  .catch(error => {\n    console.error('Error creating branch:', error);\n    showMessage('Failed to create branch', 'error');\n  });\n}\n\n/**\n * Refreshes the git section for a service\n */\nexport function refreshGitSection(serviceName: string): void {\n  window.htmx.ajax('GET', `/api/templates/git-section?service=${serviceName}`, {\n    target: '#git-section',\n    swap: 'outerHTML'\n  });\n}\n\n/**\n * Toggles git content visibility (commits or branches)\n */\nexport function toggleGitContent(contentId: string): void {\n  const content = document.getElementById(contentId);\n  if (!content) return;\n\n  content.classList.toggle('collapsed');\n\n  // Update local storage to remember user preference\n  const isCollapsed = content.classList.contains('collapsed');\n  localStorage.setItem(STORAGE_KEYS.GIT_CONTENT_COLLAPSED(contentId), isCollapsed.toString());\n}\n\n/**\n * Restores git content visibility from user preferences\n */\nexport function restoreGitContentVisibility(): void {\n  // Restore commits visibility\n  const commitsCollapsed = localStorage.getItem(STORAGE_KEYS.GIT_CONTENT_COLLAPSED('git-commits-list')) === 'true';\n  const commitsList = document.getElementById('git-commits-list');\n  if (commitsList && commitsCollapsed) {\n    commitsList.classList.add('collapsed');\n  }\n\n  // Restore branches visibility\n  const branchesCollapsed = localStorage.getItem(STORAGE_KEYS.GIT_CONTENT_COLLAPSED('git-branches-list')) === 'true';\n  const branchesList = document.getElementById('git-branches-list');\n  if (branchesList && branchesCollapsed) {\n    branchesList.classList.add('collapsed');\n  }\n}\n",
    "/**\n * Theme management service for dark/light mode toggle\n */\n\nexport type Theme = 'light' | 'dark' | 'auto';\n\nconst THEME_STORAGE_KEY = 'nexsock-theme';\nconst THEME_ICONS = {\n  light: '☀️',\n  dark: '🌙',\n  auto: '💻'\n};\n\nexport class ThemeService {\n  private currentTheme: Theme = 'auto';\n  private isInitialized: boolean = false;\n\n  constructor() {\n    if (!this.isInitialized) {\n      this.initializeTheme();\n      this.setupThemeToggle();\n      this.isInitialized = true;\n    }\n  }\n\n  /**\n   * Set a specific theme\n   */\n  public setTheme(theme: Theme): void {\n    if (!this.isValidTheme(theme)) {\n      console.warn(`Invalid theme: ${theme}`);\n      return;\n    }\n\n    this.currentTheme = theme;\n    localStorage.setItem(THEME_STORAGE_KEY, theme);\n    this.applyTheme();\n    this.updateThemeIcon();\n  }\n\n  /**\n   * Get the current theme\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  }\n\n  /**\n   * Get the effective theme (resolves 'auto' to actual theme)\n   */\n  public getEffectiveTheme(): 'light' | 'dark' {\n    if (this.currentTheme === 'auto') {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return this.currentTheme;\n  }\n\n  /**\n   * Initialize theme from localStorage or system preference\n   */\n  private initializeTheme(): void {\n    const savedTheme = localStorage.getItem(THEME_STORAGE_KEY) as Theme;\n\n    if (savedTheme && this.isValidTheme(savedTheme)) {\n      this.currentTheme = savedTheme;\n    } else {\n      this.currentTheme = 'auto';\n    }\n\n    this.applyTheme();\n    this.updateThemeIcon();\n  }\n\n  /**\n   * Set up theme toggle button event listener\n   */\n  private setupThemeToggle(): void {\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle && !themeToggle.hasAttribute('data-theme-listener')) {\n      const clickHandler = () => {\n        this.toggleTheme();\n      };\n      themeToggle.addEventListener('click', clickHandler);\n      themeToggle.setAttribute('data-theme-listener', 'true');\n    }\n  }\n\n  /**\n   * Toggle between light, dark, and auto themes\n   */\n  private toggleTheme(): void {\n    const themes: Theme[] = ['light', 'dark', 'auto'];\n    const currentIndex = themes.indexOf(this.currentTheme);\n    const nextIndex = (currentIndex + 1) % themes.length;\n    const nextTheme = themes[nextIndex];\n\n    if (nextTheme) {\n      this.setTheme(nextTheme);\n    }\n  }\n\n  /**\n   * Apply the current theme to the document\n   */\n  private applyTheme(): void {\n    document.documentElement.setAttribute('data-theme', this.currentTheme);\n  }\n\n  /**\n   * Update the theme toggle icon\n   */\n  private updateThemeIcon(): void {\n    const themeIcon = document.querySelector('.theme-icon');\n    if (themeIcon) {\n      themeIcon.textContent = THEME_ICONS[this.currentTheme];\n    }\n\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle) {\n      themeToggle.setAttribute('aria-label', `Current theme: ${this.currentTheme}. Click to change theme.`);\n    }\n  }\n\n  /**\n   * Check if a theme value is valid\n   */\n  private isValidTheme(theme: string): theme is Theme {\n    return ['light', 'dark', 'auto'].includes(theme);\n  }\n}\n\n// Global instance\nlet themeService: ThemeService | null = null;\n\n/**\n * Initialize the theme service (idempotent)\n */\nexport function initializeThemeService(): ThemeService {\n  if (!themeService) {\n    themeService = new ThemeService();\n  }\n  return themeService;\n}\n\n/**\n * Get the global theme service instance\n */\nexport function getThemeService(): ThemeService | null {\n  return themeService;\n}",
    "/**\n * Enhanced error display utilities for Nexsock UI\n * Extracts and displays detailed error information from server responses\n */\n\nimport { MessageType } from '../types/ui';\nimport { showMessage } from './messages';\n\nexport interface ErrorDetails {\n  errorCode: string;\n  errorMessage: string;\n  diagnostics: string;\n  debugInfo?: string;\n  originalUrl?: string;\n  fullErrorPageUrl?: string;\n}\n\n/**\n * Creates a modal overlay to display detailed error information\n */\nexport function showErrorModal(errorDetails: ErrorDetails): void {\n  // Remove any existing error modal\n  const existingModal = document.querySelector('.error-modal-overlay');\n  if (existingModal) {\n    existingModal.remove();\n  }\n\n  // Create modal overlay\n  const overlay = document.createElement('div');\n  overlay.className = 'error-modal-overlay modal-overlay';\n  overlay.innerHTML = `\n    <div class=\"error-modal modal\">\n      <div class=\"error-modal-header\">\n        <h2>🚨 Error Details</h2>\n        <button class=\"close-button\" onclick=\"this.closest('.error-modal-overlay').remove()\">×</button>\n      </div>\n      <div class=\"error-modal-body\">\n        <div class=\"error-code\">${escapeHtml(errorDetails.errorCode)}</div>\n        <div class=\"error-message\">${escapeHtml(errorDetails.errorMessage)}</div>\n        <div class=\"error-diagnostics\">\n          <h3>🔍 Diagnostics</h3>\n          <div class=\"diagnostics-content\">${errorDetails.diagnostics}</div>\n        </div>\n        ${errorDetails.debugInfo ? `\n          <div class=\"error-debug\">\n            <button class=\"debug-toggle\" onclick=\"toggleErrorDebug(this)\">🐛 Show Debug Info</button>\n            <div class=\"debug-content\" style=\"display: none;\">\n              <pre>${escapeHtml(errorDetails.debugInfo)}</pre>\n            </div>\n          </div>\n        ` : ''}\n      </div>\n      <div class=\"error-modal-footer\">\n        ${errorDetails.fullErrorPageUrl ? `\n          <button class=\"button button-primary\" onclick=\"window.open('${errorDetails.fullErrorPageUrl}', '_blank')\">\n            🔍 View Full Error Page\n          </button>\n        ` : ''}\n        ${isDebugMode() ? `\n          <button class=\"button button-warning\" onclick=\"navigateToErrorPage('${errorDetails.originalUrl || ''}')\">\n            🚧 Debug Mode: Go to Error Page\n          </button>\n        ` : ''}\n        <button class=\"button button-secondary\" onclick=\"this.closest('.error-modal-overlay').remove()\">Close</button>\n      </div>\n    </div>\n  `;\n\n  document.body.appendChild(overlay);\n\n  // Make debug toggle function globally available\n  (window as any).toggleErrorDebug = (button: HTMLElement) => {\n    const debugContent = button.nextElementSibling as HTMLElement;\n    if (debugContent.style.display === 'none') {\n      debugContent.style.display = 'block';\n      button.textContent = '🐛 Hide Debug Info';\n    } else {\n      debugContent.style.display = 'none';\n      button.textContent = '🐛 Show Debug Info';\n    }\n  };\n}\n\n/**\n * Shows an inline error notification in the messages container\n */\nexport function showInlineError(errorDetails: ErrorDetails): void {\n  const container = getOrCreateMessagesContainer();\n  \n  // Create enhanced error message element\n  const errorEl = document.createElement('div');\n  errorEl.className = 'message message-error enhanced-error';\n  errorEl.innerHTML = `\n    <div class=\"error-summary\">\n      <strong>${escapeHtml(errorDetails.errorCode)}</strong>\n      <p>${escapeHtml(errorDetails.errorMessage)}</p>\n      <button class=\"error-details-button\" onclick=\"showErrorDetailsModal(this)\">View Details</button>\n    </div>\n  `;\n\n  // Store error details on the element for the modal\n  (errorEl as any).errorDetails = errorDetails;\n  \n  container.appendChild(errorEl);\n\n  // Auto-remove after 10 seconds (longer than regular messages)\n  setTimeout(() => {\n    if (errorEl.parentNode) {\n      errorEl.parentNode.removeChild(errorEl);\n    }\n  }, 10000);\n}\n\n/**\n * Parses an error response HTML and extracts error details\n */\nexport function parseErrorResponse(responseText: string): ErrorDetails | null {\n  try {\n    // Create a temporary DOM to parse the response\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(responseText, 'text/html');\n\n    // Extract error information from the error page structure\n    const errorCodeEl = doc.querySelector('.error-code');\n    const errorMessageEl = doc.querySelector('.error-message');\n    const diagnosticsEl = doc.querySelector('.error-details');\n    const debugOutputEl = doc.querySelector('.debug-output');\n\n    if (!errorCodeEl || !errorMessageEl) {\n      return null; // Not a recognized error page format\n    }\n\n    return {\n      errorCode: errorCodeEl.textContent?.trim() || 'UNKNOWN_ERROR',\n      errorMessage: errorMessageEl.textContent?.trim() || 'An unknown error occurred',\n      diagnostics: diagnosticsEl?.innerHTML || 'No diagnostic information available',\n      debugInfo: debugOutputEl?.textContent || undefined\n    };\n  } catch (e) {\n    console.error('Failed to parse error response:', e);\n    return null;\n  }\n}\n\n\n/**\n * Helper function to get or create the messages container\n */\nfunction getOrCreateMessagesContainer(): HTMLElement {\n  let container = document.getElementById('messages-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'messages-container';\n    container.className = 'messages';\n    \n    // Insert after the main navigation if it exists\n    const main = document.querySelector('main');\n    if (main && main.parentNode) {\n      main.parentNode.insertBefore(container, main);\n    } else {\n      document.body.appendChild(container);\n    }\n  }\n  return container;\n}\n\n/**\n * Helper function to escape HTML content\n */\nfunction escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Checks if the application is running in debug mode\n */\nfunction isDebugMode(): boolean {\n  // Check for debug indicators\n  return !!(\n    // URL parameter\n    new URLSearchParams(window.location.search).has('debug') ||\n    // Local storage flag\n    localStorage.getItem('nexsock-debug') === 'true' ||\n    // Development environment indicators\n    window.location.hostname === 'localhost' ||\n    window.location.hostname === '127.0.0.1' ||\n    // Console debug flag\n    (window as any).NEXSOCK_DEBUG === true\n  );\n}\n\n/**\n * Creates a special URL to trigger the same error for debugging\n */\nfunction createErrorPageUrl(originalUrl: string): string {\n  const url = new URL(originalUrl, window.location.origin);\n  url.searchParams.set('debug-error', 'true');\n  return url.toString();\n}\n\n/**\n * Navigates to the full error page for debugging\n */\nfunction navigateToErrorPage(originalUrl: string): void {\n  if (originalUrl) {\n    const errorPageUrl = createErrorPageUrl(originalUrl);\n    window.location.href = errorPageUrl;\n  } else {\n    showMessage('No original URL available for error page navigation', 'warning');\n  }\n}\n\n/**\n * Handles HTMX response errors with enhanced debug mode support\n */\nexport function handleHTMXErrorWithDebug(xhr: XMLHttpRequest, requestUrl?: string): void {\n  // In debug mode, optionally navigate directly to error page\n  if (isDebugMode()) {\n    const shouldAutoRedirect = localStorage.getItem('nexsock-debug-auto-redirect') === 'true';\n    \n    if (shouldAutoRedirect && requestUrl) {\n      console.log('Debug mode: Auto-redirecting to error page');\n      navigateToErrorPage(requestUrl);\n      return;\n    }\n  }\n\n  // Otherwise, use enhanced error display\n  handleHTMXError(xhr, requestUrl);\n}\n\n/**\n * Enhanced HTMX error handler with URL tracking\n */\nexport function handleHTMXError(xhr: XMLHttpRequest, requestUrl?: string): void {\n  // First try to parse the response as a rich error page\n  if (xhr.responseText) {\n    const errorDetails = parseErrorResponse(xhr.responseText);\n    if (errorDetails) {\n      // Add URL information for debug navigation\n      errorDetails.originalUrl = requestUrl;\n      errorDetails.fullErrorPageUrl = requestUrl ? createErrorPageUrl(requestUrl) : undefined;\n      \n      // Show enhanced error display\n      showInlineError(errorDetails);\n      return;\n    }\n  }\n\n  // Fallback to status-based error messages\n  let errorMessage = 'An error occurred while processing your request';\n  let errorType: MessageType = 'error';\n\n  switch (xhr.status) {\n    case 400:\n      errorMessage = 'Bad request - please check your input and try again';\n      break;\n    case 401:\n      errorMessage = 'Authentication required - please log in';\n      break;\n    case 403:\n      errorMessage = 'Access denied - you don\\'t have permission for this action';\n      break;\n    case 404:\n      errorMessage = 'The requested resource was not found';\n      break;\n    case 429:\n      errorMessage = 'Too many requests - please wait a moment and try again';\n      errorType = 'warning';\n      break;\n    case 500:\n      errorMessage = 'Internal server error - please try again later';\n      break;\n    case 502:\n    case 503:\n    case 504:\n      errorMessage = 'Service temporarily unavailable - please try again later';\n      break;\n    default:\n      if (xhr.status >= 400) {\n        errorMessage = `Request failed with status ${xhr.status}`;\n      }\n  }\n\n  showMessage(errorMessage, errorType);\n}\n\n/**\n * Global function to show error details modal (called from inline error buttons)\n */\n(window as any).showErrorDetailsModal = (button: HTMLElement) => {\n  const errorEl = button.closest('.enhanced-error') as any;\n  if (errorEl && errorEl.errorDetails) {\n    showErrorModal(errorEl.errorDetails);\n  }\n};\n\n/**\n * Global function to navigate to error page (called from modal buttons)\n */\n(window as any).navigateToErrorPage = navigateToErrorPage;",
    "/**\n * Initialization and event handling for Nexsock Web Interface\n */\n\nimport {HTMXEvent} from '../types';\nimport {showMessage} from '../ui/messages';\nimport {closeModal} from '../ui/modals';\nimport {closeAllDropdowns} from '../ui/dropdowns';\nimport {restoreGitContentVisibility} from '../services/git-service';\nimport {getThemeService, initializeThemeService} from '../services/theme-service';\nimport {handleHTMXErrorWithDebug} from '../ui/error-display';\n\n/**\n * Initialize the application when the DOM is loaded\n */\nexport function initializeApp(): void {\n  // Initialize theme service\n  initializeThemeService();\n\n  // Restore git content visibility preferences\n  restoreGitContentVisibility();\n\n  // Add global error handler for HTMX\n  document.body.addEventListener('htmx:responseError', (event: Event) => {\n    const htmxEvent = event as HTMXEvent;\n    console.error('HTMX Error:', htmxEvent.detail);\n    \n    // Extract request information\n    const xhr = htmxEvent.detail.xhr;\n    const requestUrl = htmxEvent.detail.requestConfig?.path;\n    \n    if (xhr) {\n      // Use enhanced error display with debug mode support\n      handleHTMXErrorWithDebug(xhr, requestUrl);\n    } else {\n      // Fallback for cases where xhr is not available\n      showMessage('An error occurred while loading content', 'error');\n    }\n  });\n\n  // Handle navigation state changes\n  document.body.addEventListener('htmx:pushedIntoHistory', (event: Event) => {\n    // Just ensure theme is applied, don't re-initialize\n    const themeService = getThemeService();\n    if (themeService) {\n      const currentTheme = themeService.getCurrentTheme();\n      document.documentElement.setAttribute('data-theme', currentTheme);\n    }\n  });\n\n  // Add loading indicator for HTMX requests\n  document.body.addEventListener('htmx:beforeRequest', (event: Event) => {\n    const target = event.target as HTMLElement;\n    if (target.classList.contains('button')) {\n      target.classList.add('button-loading');\n    }\n  });\n\n  document.body.addEventListener('htmx:afterRequest', (event: Event) => {\n    const target = event.target as HTMLElement;\n    if (target.classList.contains('button')) {\n      target.classList.remove('button-loading');\n    }\n\n    // Restore git content visibility after HTMX updates\n    restoreGitContentVisibility();\n  });\n\n  // Handle content replacement and re-initialization\n  document.body.addEventListener('htmx:afterSettle', (event: Event) => {\n    // Ensure theme is properly applied to new content (don't re-initialize)\n    const themeService = getThemeService();\n    if (themeService) {\n      const currentTheme = themeService.getCurrentTheme();\n      document.documentElement.setAttribute('data-theme', currentTheme);\n    }\n  });\n\n  // Handle click outside modal to close\n  document.addEventListener('click', (event: Event) => {\n    const target = event.target as HTMLElement;\n    if (target.classList.contains('modal-overlay')) {\n      closeModal();\n    }\n\n    // Close dropdowns when clicking outside\n    if (!target.closest('.dropdown')) {\n      closeAllDropdowns();\n    }\n  });\n\n  // Handle ESC key to close modal and dropdowns\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      closeModal();\n      closeAllDropdowns();\n    }\n  });\n}",
    "/**\n * Configuration management service for Nexsock\n * Handles saving, loading, and managing service configurations\n */\n\nimport {ServiceConfig, ServiceConfigs} from '../types/service';\nimport {STORAGE_KEYS} from '../types/storage';\n\n/**\n * Saves environment variable configuration for a service to localStorage\n */\nexport function saveServiceConfig(\n  serviceName: string, \n  configName: string, \n  envVars: Record<string, string>, \n  description: string = ''\n): void {\n  const key = STORAGE_KEYS.SERVICE_CONFIG(serviceName);\n  const configs = getServiceConfigs(serviceName);\n\n  configs[configName] = {\n    envVars,\n    description,\n    lastUsed: new Date().toISOString(),\n    created: configs[configName]?.created || new Date().toISOString()\n  };\n\n  localStorage.setItem(key, JSON.stringify(configs));\n  console.log(`Saved configuration '${configName}' for service '${serviceName}'`);\n}\n\n/**\n * Gets all saved configurations for a service\n */\nexport function getServiceConfigs(serviceName: string): ServiceConfigs {\n  const key = STORAGE_KEYS.SERVICE_CONFIG(serviceName);\n  const stored = localStorage.getItem(key);\n  return stored ? JSON.parse(stored) : {};\n}\n\n/**\n * Loads a specific configuration for a service\n */\nexport function loadServiceConfig(serviceName: string, configName: string): ServiceConfig | null {\n  const configs = getServiceConfigs(serviceName);\n  return configs[configName] || null;\n}\n\n/**\n * Deletes a configuration for a service\n */\nexport function deleteServiceConfig(serviceName: string, configName: string): boolean {\n  const key = STORAGE_KEYS.SERVICE_CONFIG(serviceName);\n  const configs = getServiceConfigs(serviceName);\n\n  if (configs[configName]) {\n    delete configs[configName];\n    localStorage.setItem(key, JSON.stringify(configs));\n    console.log(`Deleted configuration '${configName}' for service '${serviceName}'`);\n    return true;\n  }\n  return false;\n}\n",
    "/**\n * Environment variable management service for Nexsock\n * Handles getting, setting, and managing environment variables for services\n */\n\nimport {showMessage} from '../ui/messages';\n\n/**\n * Gets the current environment variables from the form\n */\nexport function getCurrentEnvVars(serviceName: string): Record<string, string> {\n  const envVars: Record<string, string> = {};\n  const container = document.getElementById(`env-vars-${serviceName}`);\n\n  if (container) {\n    container.querySelectorAll('.env-var-pair').forEach(pair => {\n      const inputs = pair.querySelectorAll<HTMLInputElement>('input');\n      const [keyInput, valueInput] = inputs;\n      if (keyInput?.value) {\n        envVars[keyInput.value] = valueInput?.value || '';\n      }\n    });\n  }\n  return envVars;\n}\n\n/**\n * Applies environment variables to the form using HTMX\n */\nexport function applyEnvVarsToForm(serviceName: string, envVars: Record<string, string>): void {\n  const container = document.getElementById(`env-vars-${serviceName}`);\n  if (!container) return;\n\n  // Clear existing variables\n  container.innerHTML = '';\n\n  // Load environment variables using HTMX\n  Object.entries(envVars).forEach(([key, value]) => {\n    window.htmx.ajax('GET', `/api/templates/env-var-pair?key=${encodeURIComponent(key)}&value=${encodeURIComponent(value)}`, {\n      target: `#env-vars-${serviceName}`,\n      swap: 'beforeend'\n    });\n  });\n\n  // Add one empty pair for additional variables\n  window.htmx.ajax('GET', '/api/templates/env-var-pair', {\n    target: `#env-vars-${serviceName}`,\n    swap: 'beforeend'\n  });\n}\n\n/**\n * Clears all current environment variables\n */\nexport function clearCurrentEnvVars(serviceName: string): void {\n  const container = document.getElementById(`env-vars-${serviceName}`);\n  if (!container) return;\n\n  if (confirm('Clear all current environment variables?')) {\n    container.innerHTML = '';\n    // Add one empty pair\n    window.htmx.ajax('GET', '/api/templates/env-var-pair', {\n      target: `#env-vars-${serviceName}`,\n      swap: 'beforeend'\n    });\n    showMessage('Environment variables cleared', 'info');\n  }\n}\n",
    "/**\n * Service management utilities for Nexsock\n * Handles service-specific operations\n */\n\nimport {showMessage} from '../ui/messages';\nimport {loadServiceConfig} from './config-service';\nimport {applyEnvVarsToForm} from './env-vars-service';\n\n/**\n * Toggles the visibility of service management sections\n */\nexport function toggleManagement(serviceName: string): void {\n  const managementDiv = document.getElementById(`management-${serviceName}`);\n  if (managementDiv) {\n    const isHidden = managementDiv.style.display === 'none';\n    managementDiv.style.display = isHidden ? 'block' : 'none';\n  }\n}\n\n/**\n * Loads a configuration from selection\n */\nexport function loadConfigFromSelection(serviceName: string, configName: string): void {\n  if (!configName) return;\n\n  const config = loadServiceConfig(serviceName, configName);\n  if (config) {\n    applyEnvVarsToForm(serviceName, config.envVars);\n    console.log(`Loaded configuration '${configName}' for service '${serviceName}'`);\n  }\n}\n\n/**\n * Shows a modal to save current environment variables as a configuration\n */\nexport function showSaveConfigModal(serviceName: string): void {\n  const envVars = window.nexsock.getCurrentEnvVars(serviceName);\n\n  if (Object.keys(envVars).length === 0) {\n    showMessage('Please add some environment variables before saving a configuration.', 'warning');\n    return;\n  }\n\n  const configName = prompt('Enter a name for this configuration:');\n  if (!configName) return;\n\n  const description = prompt('Enter a description (optional):') || '';\n\n  window.nexsock.saveServiceConfig(serviceName, configName, envVars, description);\n  window.nexsock.refreshConfigUI(serviceName);\n  showMessage(`Configuration '${configName}' saved successfully!`, 'success');\n}\n\n/**\n * Refreshes the configuration UI components using HTMX\n */\nexport function refreshConfigUI(serviceName: string): void {\n  window.htmx.ajax('GET', `/api/templates/config-section?service=${encodeURIComponent(serviceName)}`, {\n    target: `#config-section-${serviceName}`,\n    swap: 'innerHTML'\n  });\n}\n\n/**\n * Deletes a configuration and refreshes the modal\n */\nexport function deleteConfigAndRefresh(serviceName: string, configName: string): void {\n  if (confirm(`Are you sure you want to delete the configuration '${configName}'?`)) {\n    window.nexsock.deleteServiceConfig(serviceName, configName);\n    // Refresh the modal content\n    window.htmx.ajax('GET', `/api/templates/config-modal-content?service=${encodeURIComponent(serviceName)}`, {\n      target: '.modal-body',\n      swap: 'innerHTML'\n    });\n    // Also refresh the main config UI\n    window.nexsock.refreshConfigUI(serviceName);\n    showMessage(`Configuration '${configName}' deleted successfully.`, 'success');\n  }\n}\n\n/**\n * Confirms service removal with better UX\n */\nexport async function confirmRemove(serviceName: string): Promise<void> {\n  if (!serviceName) {\n    showMessage('Invalid service name', 'error');\n    return;\n  }\n\n  if (confirm(`Are you sure you want to remove ${serviceName}? This action cannot be undone.`)) {\n    try {\n      const response = await fetch(`/api/services/${serviceName}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n\n      showMessage(`Service '${serviceName}' removed successfully.`, 'success');\n\n      // Navigate back to services list\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Error removing service:', error);\n      showMessage('Failed to remove service', 'error');\n    }\n  }\n}",
    "/**\n * Debug utilities for Nexsock Web Interface\n * Provides easy ways to enable debug mode and configure error handling behavior\n */\n\n/**\n * Debug mode configuration interface\n */\nexport interface DebugConfig {\n  enabled: boolean;\n  autoRedirectToErrorPage: boolean;\n  verboseLogging: boolean;\n}\n\n/**\n * Default debug configuration\n */\nconst DEFAULT_DEBUG_CONFIG: DebugConfig = {\n  enabled: false,\n  autoRedirectToErrorPage: false,\n  verboseLogging: false,\n};\n\n/**\n * Gets the current debug configuration\n */\nexport function getDebugConfig(): DebugConfig {\n  try {\n    const stored = localStorage.getItem('nexsock-debug-config');\n    if (stored) {\n      return { ...DEFAULT_DEBUG_CONFIG, ...JSON.parse(stored) };\n    }\n  } catch (e) {\n    console.warn('Failed to parse debug config from localStorage:', e);\n  }\n  \n  return DEFAULT_DEBUG_CONFIG;\n}\n\n/**\n * Updates the debug configuration\n */\nexport function setDebugConfig(config: Partial<DebugConfig>): void {\n  const currentConfig = getDebugConfig();\n  const newConfig = { ...currentConfig, ...config };\n  \n  try {\n    localStorage.setItem('nexsock-debug-config', JSON.stringify(newConfig));\n    \n    // Update individual flags for backward compatibility\n    localStorage.setItem('nexsock-debug', newConfig.enabled.toString());\n    localStorage.setItem('nexsock-debug-auto-redirect', newConfig.autoRedirectToErrorPage.toString());\n    \n    console.log('Debug config updated:', newConfig);\n  } catch (e) {\n    console.error('Failed to save debug config:', e);\n  }\n}\n\n/**\n * Enables debug mode with optional configuration\n */\nexport function enableDebugMode(options: Partial<DebugConfig> = {}): void {\n  setDebugConfig({ enabled: true, ...options });\n  console.log('🚧 Debug mode enabled for Nexsock');\n  console.log('To disable: nexsock.debug.disable()');\n  console.log('To configure: nexsock.debug.configure({ autoRedirectToErrorPage: true })');\n}\n\n/**\n * Disables debug mode\n */\nexport function disableDebugMode(): void {\n  setDebugConfig({ \n    enabled: false, \n    autoRedirectToErrorPage: false,\n    verboseLogging: false \n  });\n  console.log('Debug mode disabled for Nexsock');\n}\n\n/**\n * Configures debug mode settings\n */\nexport function configureDebugMode(options: Partial<DebugConfig>): void {\n  const currentConfig = getDebugConfig();\n  if (!currentConfig.enabled) {\n    console.warn('Debug mode is not enabled. Enable it first with nexsock.debug.enable()');\n    return;\n  }\n  \n  setDebugConfig(options);\n  console.log('Debug configuration updated:', { ...currentConfig, ...options });\n}\n\n/**\n * Logs debug information if verbose logging is enabled\n */\nexport function debugLog(message: string, ...args: any[]): void {\n  const config = getDebugConfig();\n  if (config.enabled && config.verboseLogging) {\n    console.log(`[Nexsock Debug] ${message}`, ...args);\n  }\n}\n\n/**\n * Shows current debug status and available commands\n */\nexport function showDebugStatus(): void {\n  const config = getDebugConfig();\n  \n  console.group('🚧 Nexsock Debug Status');\n  console.log('Enabled:', config.enabled);\n  console.log('Auto-redirect to error page:', config.autoRedirectToErrorPage);\n  console.log('Verbose logging:', config.verboseLogging);\n  console.groupEnd();\n  \n  if (config.enabled) {\n    console.log('\\nAvailable debug commands:');\n    console.log('- nexsock.debug.disable() - Disable debug mode');\n    console.log('- nexsock.debug.configure({ autoRedirectToErrorPage: true }) - Auto-redirect to error pages');\n    console.log('- nexsock.debug.configure({ verboseLogging: true }) - Enable verbose logging');\n    console.log('- nexsock.debug.testError() - Trigger a test error to see error handling');\n  } else {\n    console.log('Enable debug mode with: nexsock.debug.enable()');\n  }\n}\n\n/**\n * Triggers a test error to demonstrate error handling\n */\nexport function triggerTestError(): void {\n  console.log('Triggering test error...');\n  \n  // Make a request to one of our test error endpoints\n  fetch('/api/test-query-error')\n    .then(response => {\n      if (!response.ok) {\n        console.log('Test error response received:', response.status);\n      }\n    })\n    .catch(error => {\n      console.error('Test error triggered:', error);\n    });\n}\n\n/**\n * Debug utilities object for global access\n */\nexport const debugUtils = {\n  enable: enableDebugMode,\n  disable: disableDebugMode,\n  configure: configureDebugMode,\n  status: showDebugStatus,\n  testError: triggerTestError,\n  getConfig: getDebugConfig,\n  log: debugLog,\n};",
    "/**\n * Global API object for Nexsock Web Interface\n */\n\nimport {NexsockAPI} from '../types/api';\n\n// Import services\nimport {deleteServiceConfig, getServiceConfigs, loadServiceConfig, saveServiceConfig} from '../services/config-service';\n\nimport {applyEnvVarsToForm, clearCurrentEnvVars, getCurrentEnvVars} from '../services/env-vars-service';\n\nimport {\n  createNewBranch,\n  refreshGitSection,\n  restoreGitContentVisibility,\n  showGitTab,\n  toggleGitContent\n} from '../services/git-service';\n\nimport {\n  confirmRemove,\n  deleteConfigAndRefresh,\n  loadConfigFromSelection,\n  refreshConfigUI,\n  showSaveConfigModal,\n  toggleManagement\n} from '../services/service-management';\n\n// Import UI utilities\nimport {showMessage} from '../ui/messages';\nimport {closeModal} from '../ui/modals';\nimport {closeAllDropdowns, toggleDropdown} from '../ui/dropdowns';\n\n// Import debug utilities\nimport {debugUtils} from './debug';\n\n/**\n * Create and export the global API object\n */\nexport const createGlobalAPI = (): NexsockAPI => {\n  return {\n    saveServiceConfig,\n    getServiceConfigs,\n    loadServiceConfig,\n    deleteServiceConfig,\n    getCurrentEnvVars,\n    applyEnvVarsToForm,\n    loadConfigFromSelection,\n    showSaveConfigModal,\n    refreshConfigUI,\n    deleteConfigAndRefresh,\n    toggleManagement,\n    closeModal,\n    showMessage,\n    confirmRemove,\n    showGitTab,\n    createNewBranch,\n    refreshGitSection,\n    toggleDropdown,\n    closeAllDropdowns,\n    clearCurrentEnvVars,\n    toggleGitContent,\n    restoreGitContentVisibility,\n    debug: debugUtils\n  };\n};",
    "/**\n * Main TypeScript file for Nexsock Web Interface\n * Provides JSX-based UI components as web components for use in Rust templates\n */\n\n// Import JSX utilities first to set up global functions\nimport './core/jsx-utils';\n\n// Import styles\nimport './ui/error-display.css';\n\nimport {registerAllComponents} from './generated/component-registry';\nimport {initializeApp} from './core/init';\nimport {createGlobalAPI} from './core/api';\n\n// ===============================================\n// Initialization\n// ===============================================\n\n// Initialize when page loads\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Initialize the application\n  initializeApp();\n\n  // Create and make API available globally\n  window.nexsock = createGlobalAPI();\n\n  // Register all UI components as web components  \n  registerAllComponents();\n\n  console.log('Nexsock web interface initialized successfully');\n});\n"
  ],
  "mappings": "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",
  "debugId": "E30CB613C7AC268764756E2164756E21",
  "names": []
}