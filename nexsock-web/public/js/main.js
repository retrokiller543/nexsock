(()=>{var Z={SERVICE_CONFIG:(q)=>`nexsock_service_config_${q}`,GIT_CONTENT_COLLAPSED:(q)=>`git_${q}_collapsed`};function F(q,z,J,Q=""){let W=Z.SERVICE_CONFIG(q),$=j(q);$[z]={envVars:J,description:Q,lastUsed:new Date().toISOString(),created:$[z]?.created||new Date().toISOString()},localStorage.setItem(W,JSON.stringify($)),console.log(`Saved configuration '${z}' for service '${q}'`)}function j(q){let z=Z.SERVICE_CONFIG(q),J=localStorage.getItem(z);return J?JSON.parse(J):{}}function L(q,z){return j(q)[z]||null}function U(q,z){let J=Z.SERVICE_CONFIG(q),Q=j(q);if(Q[z])return delete Q[z],localStorage.setItem(J,JSON.stringify(Q)),console.log(`Deleted configuration '${z}' for service '${q}'`),!0;return!1}function K(q){let z={},J=document.getElementById(`env-vars-${q}`);if(J)J.querySelectorAll(".env-var-pair").forEach((Q)=>{let W=Q.querySelectorAll("input"),[$,Y]=W;if($?.value)z[$.value]=Y?.value||""});return z}function O(q,z){let J=document.getElementById(`env-vars-${q}`);if(!J)return;J.innerHTML="",Object.entries(z).forEach(([Q,W])=>{window.htmx.ajax("GET",`/api/templates/env-var-pair?key=${encodeURIComponent(Q)}&value=${encodeURIComponent(W)}`,{target:`#env-vars-${q}`,swap:"beforeend"})}),window.htmx.ajax("GET","/api/templates/env-var-pair",{target:`#env-vars-${q}`,swap:"beforeend"})}function _(q){let z=document.getElementById(`env-vars-${q}`);if(!z)return;if(confirm("Clear all current environment variables?"))z.innerHTML="",window.htmx.ajax("GET","/api/templates/env-var-pair",{target:`#env-vars-${q}`,swap:"beforeend"}),X("Environment variables cleared","info")}function R(q,z){if(!z)return;let J=L(q,z);if(J)O(q,J.envVars),console.log(`Loaded configuration '${z}' for service '${q}'`)}function D(q){let z=K(q);if(Object.keys(z).length===0){X("Please add some environment variables before saving a configuration.","warning");return}let J=prompt("Enter a name for this configuration:");if(!J)return;let Q=prompt("Enter a description (optional):")||"";F(q,J,z,Q),B(q),X(`Configuration '${J}' saved successfully!`,"success")}function B(q){window.htmx.ajax("GET",`/api/templates/config-section?service=${encodeURIComponent(q)}`,{target:`#config-section-${q}`,swap:"innerHTML"})}function T(q,z){if(confirm(`Are you sure you want to delete the configuration '${z}'?`))U(q,z),window.htmx.ajax("GET",`/api/templates/config-modal-content?service=${encodeURIComponent(q)}`,{target:".modal-body",swap:"innerHTML"}),B(q),X(`Configuration '${z}' deleted successfully.`,"success")}function k(q){let z=document.getElementById(`management-${q}`);if(z){let J=z.style.display==="none";z.style.display=J?"block":"none"}}function x(){let q=document.querySelector(".modal-overlay");if(q)q.remove()}function X(q,z="info"){let J=document.createElement("div");J.className=`message message-${z}`,J.textContent=q;let Q=document.getElementById("messages-container");if(!Q)Q=document.createElement("div"),Q.id="messages-container",Q.className="messages",document.body.appendChild(Q);Q.appendChild(J),setTimeout(()=>{if(J.parentNode)J.parentNode.removeChild(J)},5000)}async function A(q){if(!q){X("Invalid service name","error");return}if(confirm(`Are you sure you want to remove ${q}? This action cannot be undone.`))try{let z=await fetch(`/api/services/${q}`,{method:"DELETE"});if(!z.ok)throw new Error(`HTTP error: ${z.status}`);X(`Service '${q}' removed successfully.`,"success"),window.location.href="/"}catch(z){console.error("Error removing service:",z),X("Failed to remove service","error")}}function G(q,z){document.querySelectorAll(".tab-button").forEach((W)=>{W.classList.remove("active")});let J=event?.target;if(J)J.classList.add("active");let Q=document.getElementById("git-tab-content");if(!Q)return;if(q==="commits")Q.innerHTML='<div class="loading">Loading commits...</div>',window.htmx.ajax("GET",`/api/templates/git-log?service=${z}`,{target:"#git-tab-content",swap:"innerHTML"});else if(q==="branches")Q.innerHTML='<div class="loading">Loading branches...</div>',window.htmx.ajax("GET",`/api/templates/git-branches?service=${z}`,{target:"#git-tab-content",swap:"innerHTML"})}function u(q){let z=document.getElementById("new-branch-name");if(!z)return;let J=z.value.trim();if(!J){X("Please enter a branch name","warning");return}if(!confirm(`Create new branch "${J}" and switch to it?`))return;let Q=new FormData;Q.append("branch",J),Q.append("create","true"),fetch(`/api/services/${q}/git/checkout/branch`,{method:"POST",body:Q}).then((W)=>{if(!W.ok)throw new Error(`HTTP error: ${W.status}`);return W.json()}).then((W)=>{z.value="",window.htmx.ajax("GET",`/api/templates/git-section?service=${q}`,{target:"#git-section",swap:"outerHTML"}),X(`Successfully created and switched to branch "${J}"`,"success")}).catch((W)=>{console.error("Error creating branch:",W),X("Failed to create branch","error")})}function V(q){window.htmx.ajax("GET",`/api/templates/git-section?service=${q}`,{target:"#git-section",swap:"outerHTML"})}function y(q){let z=document.getElementById(q);if(!z)return;z.classList.toggle("collapsed");let J=z.classList.contains("collapsed");localStorage.setItem(Z.GIT_CONTENT_COLLAPSED(q),J.toString())}function H(){let q=localStorage.getItem(Z.GIT_CONTENT_COLLAPSED("git-commits-list"))==="true",z=document.getElementById("git-commits-list");if(z&&q)z.classList.add("collapsed");let J=localStorage.getItem(Z.GIT_CONTENT_COLLAPSED("git-branches-list"))==="true",Q=document.getElementById("git-branches-list");if(Q&&J)Q.classList.add("collapsed")}function M(q){let z=document.getElementById(q);if(!z)return;document.querySelectorAll(".dropdown.active").forEach((J)=>{if(J.id!==q)J.classList.remove("active")}),z.classList.toggle("active")}function P(){document.querySelectorAll(".dropdown.active").forEach((q)=>{q.classList.remove("active")})}document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("[data-service-name]").forEach((q)=>{let z=q.getAttribute("data-service-name");if(z)B(z)}),H(),document.body.addEventListener("htmx:responseError",(q)=>{console.error("HTMX Error:",q.detail),X("An error occurred while loading content","error")}),document.body.addEventListener("htmx:beforeRequest",(q)=>{let z=q.target;if(z.classList.contains("button"))z.classList.add("button-loading")}),document.body.addEventListener("htmx:afterRequest",(q)=>{let z=q.target;if(z.classList.contains("button"))z.classList.remove("button-loading");H()})});document.addEventListener("click",(q)=>{let z=q.target;if(z.classList.contains("modal-overlay"))x();if(!z.closest(".dropdown"))P()});document.addEventListener("keydown",(q)=>{if(q.key==="Escape")x(),P()});var I={saveServiceConfig:F,getServiceConfigs:j,loadServiceConfig:L,deleteServiceConfig:U,getCurrentEnvVars:K,applyEnvVarsToForm:O,loadConfigFromSelection:R,showSaveConfigModal:D,refreshConfigUI:B,deleteConfigAndRefresh:T,toggleManagement:k,closeModal:x,showMessage:X,confirmRemove:A,showGitTab:G,createNewBranch:u,refreshGitSection:V,toggleDropdown:M,closeAllDropdowns:P,clearCurrentEnvVars:_,toggleGitContent:y,restoreGitContentVisibility:H};window.nexsock=I;})();

//# debugId=0E944CC45107328E64756E2164756E21
//# sourceMappingURL=main.js.map
